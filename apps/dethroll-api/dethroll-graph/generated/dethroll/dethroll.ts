// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GameCreated extends ethereum.Event {
  get params(): GameCreated__Params {
    return new GameCreated__Params(this);
  }
}

export class GameCreated__Params {
  _event: GameCreated;

  constructor(event: GameCreated) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get player1(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GameJoin extends ethereum.Event {
  get params(): GameJoin__Params {
    return new GameJoin__Params(this);
  }
}

export class GameJoin__Params {
  _event: GameJoin;

  constructor(event: GameJoin) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get player2(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get player1(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class GameWon extends ethereum.Event {
  get params(): GameWon__Params {
    return new GameWon__Params(this);
  }
}

export class GameWon__Params {
  _event: GameWon;

  constructor(event: GameWon) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get loser(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get wonAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Roll extends ethereum.Event {
  get params(): Roll__Params {
    return new Roll__Params(this);
  }
}

export class Roll__Params {
  _event: Roll;

  constructor(event: Roll) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get player(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rolledNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class dethroll__getMinePendingGameResultValue0Struct extends ethereum.Tuple {
  get player1(): Address {
    return this[0].toAddress();
  }

  get player2(): Address {
    return this[1].toAddress();
  }

  get startTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get lastRandomNumber(): BigInt {
    return this[3].toBigInt();
  }

  get betAmount(): BigInt {
    return this[4].toBigInt();
  }

  get lastPlayer1(): boolean {
    return this[5].toBoolean();
  }

  get rollsCount(): BigInt {
    return this[6].toBigInt();
  }

  get winner(): Address {
    return this[7].toAddress();
  }
}

export class dethroll extends ethereum.SmartContract {
  static bind(address: Address): dethroll {
    return new dethroll("dethroll", address);
  }

  _qrngUint256(): BigInt {
    let result = super.call("_qrngUint256", "_qrngUint256():(uint256)", []);

    return result[0].toBigInt();
  }

  try__qrngUint256(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("_qrngUint256", "_qrngUint256():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  airnode(): Address {
    let result = super.call("airnode", "airnode():(address)", []);

    return result[0].toAddress();
  }

  try_airnode(): ethereum.CallResult<Address> {
    let result = super.tryCall("airnode", "airnode():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  airnodeRrp(): Address {
    let result = super.call("airnodeRrp", "airnodeRrp():(address)", []);

    return result[0].toAddress();
  }

  try_airnodeRrp(): ethereum.CallResult<Address> {
    let result = super.tryCall("airnodeRrp", "airnodeRrp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  endpointIdUint256(): Bytes {
    let result = super.call(
      "endpointIdUint256",
      "endpointIdUint256():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_endpointIdUint256(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "endpointIdUint256",
      "endpointIdUint256():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  expectingRequestWithIdToBeFulfilled(param0: Bytes): boolean {
    let result = super.call(
      "expectingRequestWithIdToBeFulfilled",
      "expectingRequestWithIdToBeFulfilled(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBoolean();
  }

  try_expectingRequestWithIdToBeFulfilled(
    param0: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "expectingRequestWithIdToBeFulfilled",
      "expectingRequestWithIdToBeFulfilled(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getMinePendingGame(
    player: Address
  ): dethroll__getMinePendingGameResultValue0Struct {
    let result = super.call(
      "getMinePendingGame",
      "getMinePendingGame(address):((address,address,uint256,uint256,uint256,bool,uint256,address))",
      [ethereum.Value.fromAddress(player)]
    );

    return changetype<dethroll__getMinePendingGameResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMinePendingGame(
    player: Address
  ): ethereum.CallResult<dethroll__getMinePendingGameResultValue0Struct> {
    let result = super.tryCall(
      "getMinePendingGame",
      "getMinePendingGame(address):((address,address,uint256,uint256,uint256,bool,uint256,address))",
      [ethereum.Value.fromAddress(player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<dethroll__getMinePendingGameResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sponsorWallet(): Address {
    let result = super.call("sponsorWallet", "sponsorWallet():(address)", []);

    return result[0].toAddress();
  }

  try_sponsorWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sponsorWallet",
      "sponsorWallet():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifyMessage(_hashedMessage: Bytes, _v: i32, _r: Bytes, _s: Bytes): Address {
    let result = super.call(
      "verifyMessage",
      "verifyMessage(bytes32,uint8,bytes32,bytes32):(address)",
      [
        ethereum.Value.fromFixedBytes(_hashedMessage),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );

    return result[0].toAddress();
  }

  try_verifyMessage(
    _hashedMessage: Bytes,
    _v: i32,
    _r: Bytes,
    _s: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "verifyMessage",
      "verifyMessage(bytes32,uint8,bytes32,bytes32):(address)",
      [
        ethereum.Value.fromFixedBytes(_hashedMessage),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_v)),
        ethereum.Value.fromFixedBytes(_r),
        ethereum.Value.fromFixedBytes(_s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _airnodeRrp(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositErc20Call extends ethereum.Call {
  get inputs(): DepositErc20Call__Inputs {
    return new DepositErc20Call__Inputs(this);
  }

  get outputs(): DepositErc20Call__Outputs {
    return new DepositErc20Call__Outputs(this);
  }
}

export class DepositErc20Call__Inputs {
  _call: DepositErc20Call;

  constructor(call: DepositErc20Call) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositErc20Call__Outputs {
  _call: DepositErc20Call;

  constructor(call: DepositErc20Call) {
    this._call = call;
  }
}

export class FulfillUint256Call extends ethereum.Call {
  get inputs(): FulfillUint256Call__Inputs {
    return new FulfillUint256Call__Inputs(this);
  }

  get outputs(): FulfillUint256Call__Outputs {
    return new FulfillUint256Call__Outputs(this);
  }
}

export class FulfillUint256Call__Inputs {
  _call: FulfillUint256Call;

  constructor(call: FulfillUint256Call) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class FulfillUint256Call__Outputs {
  _call: FulfillUint256Call;

  constructor(call: FulfillUint256Call) {
    this._call = call;
  }
}

export class InitGameCall extends ethereum.Call {
  get inputs(): InitGameCall__Inputs {
    return new InitGameCall__Inputs(this);
  }

  get outputs(): InitGameCall__Outputs {
    return new InitGameCall__Outputs(this);
  }
}

export class InitGameCall__Inputs {
  _call: InitGameCall;

  constructor(call: InitGameCall) {
    this._call = call;
  }

  get _betAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _hashedMessage(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class InitGameCall__Outputs {
  _call: InitGameCall;

  constructor(call: InitGameCall) {
    this._call = call;
  }
}

export class JoinGameCall extends ethereum.Call {
  get inputs(): JoinGameCall__Inputs {
    return new JoinGameCall__Inputs(this);
  }

  get outputs(): JoinGameCall__Outputs {
    return new JoinGameCall__Outputs(this);
  }
}

export class JoinGameCall__Inputs {
  _call: JoinGameCall;

  constructor(call: JoinGameCall) {
    this._call = call;
  }

  get oponent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hashedMessage(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class JoinGameCall__Outputs {
  _call: JoinGameCall;

  constructor(call: JoinGameCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _mainWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _discord(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _sigWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RollCall extends ethereum.Call {
  get inputs(): RollCall__Inputs {
    return new RollCall__Inputs(this);
  }

  get outputs(): RollCall__Outputs {
    return new RollCall__Outputs(this);
  }
}

export class RollCall__Inputs {
  _call: RollCall;

  constructor(call: RollCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _hashedMessage(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class RollCall__Outputs {
  _call: RollCall;

  constructor(call: RollCall) {
    this._call = call;
  }
}

export class SetParametersCall extends ethereum.Call {
  get inputs(): SetParametersCall__Inputs {
    return new SetParametersCall__Inputs(this);
  }

  get outputs(): SetParametersCall__Outputs {
    return new SetParametersCall__Outputs(this);
  }
}

export class SetParametersCall__Inputs {
  _call: SetParametersCall;

  constructor(call: SetParametersCall) {
    this._call = call;
  }

  get _airnode(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _endpointIdUint256(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _sponsorWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetParametersCall__Outputs {
  _call: SetParametersCall;

  constructor(call: SetParametersCall) {
    this._call = call;
  }
}

export class TerminatePendingGameCall extends ethereum.Call {
  get inputs(): TerminatePendingGameCall__Inputs {
    return new TerminatePendingGameCall__Inputs(this);
  }

  get outputs(): TerminatePendingGameCall__Outputs {
    return new TerminatePendingGameCall__Outputs(this);
  }
}

export class TerminatePendingGameCall__Inputs {
  _call: TerminatePendingGameCall;

  constructor(call: TerminatePendingGameCall) {
    this._call = call;
  }

  get _hashedMessage(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _v(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class TerminatePendingGameCall__Outputs {
  _call: TerminatePendingGameCall;

  constructor(call: TerminatePendingGameCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
