/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DETHRoll,
  DETHRollInterface,
} from "../../../contracts/dETH.sol/DETHRoll";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player1",
        type: "address",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player2",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player1",
        type: "address",
      },
    ],
    name: "GameJoin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "loser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wonAmount",
        type: "uint256",
      },
    ],
    name: "GameWon",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rolledNumber",
        type: "uint256",
      },
    ],
    name: "Roll",
    type: "event",
  },
  {
    inputs: [],
    name: "_qrngUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sigWallet",
        type: "address",
      },
    ],
    name: "depositErc20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endpointIdUint256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expectingRequestWithIdToBeFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameId",
        type: "string",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player1",
            type: "address",
          },
          {
            internalType: "address",
            name: "player2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRandomNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lastPlayer1",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rollsCount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
        ],
        internalType: "struct DETHRoll.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getMinePendingGame",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player1",
            type: "address",
          },
          {
            internalType: "address",
            name: "player2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRandomNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lastPlayer1",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rollsCount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
        ],
        internalType: "struct DETHRoll.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPendingGameForWallet",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player1",
            type: "address",
          },
          {
            internalType: "address",
            name: "player2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRandomNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lastPlayer1",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rollsCount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
        ],
        internalType: "struct DETHRoll.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "discord",
            type: "string",
          },
          {
            internalType: "address",
            name: "mainWallet",
            type: "address",
          },
        ],
        internalType: "struct DETHRoll.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player1",
        type: "address",
      },
    ],
    name: "initGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        internalType: "address",
        name: "oponent",
        type: "address",
      },
      {
        internalType: "address",
        name: "player2",
        type: "address",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mainWallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "_discord",
        type: "string",
      },
      {
        internalType: "address",
        name: "_sigWallet",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "resetPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameId",
        type: "string",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "roll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sponsorWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "terminatePendingGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003f5838038062003f58833981810160405281019062000037919062000216565b620000576200004b620000e060201b60201c565b620000e860201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000248565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001de82620001b1565b9050919050565b620001f081620001d1565b8114620001fc57600080fd5b50565b6000815190506200021081620001e5565b92915050565b6000602082840312156200022f576200022e620001ac565b5b60006200023f84828501620001ff565b91505092915050565b613d0080620002586000396000f3fe60806040526004361061012a5760003560e01c80638da5cb5b116100ab578063bfab33bc1161006f578063bfab33bc146103e5578063c95e090914610422578063dbdff2c11461044b578063dc13b2a814610476578063f2fde38b1461049f578063f35efe64146104c85761012a565b80638da5cb5b1461031257806397294e581461033d578063a36ff4d814610366578063bc1d97e714610391578063bf90fb4e146103ba5761012a565b80635c12cd4b116100f25780635c12cd4b146102195780636ec3c39314610256578063715018a61461028157806381dd33b514610298578063851244f7146102d55761012a565b806307b9fc571461012f5780632442612b1461015a57806345a6898f14610183578063477348921461019f5780634d92f652146101dc575b600080fd5b34801561013b57600080fd5b506101446104f1565b6040516101519190612b61565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190612d34565b6104f7565b005b61019d60048036038101906101989190612dd9565b610add565b005b3480156101ab57600080fd5b506101c660048036038101906101c19190612e19565b610dc9565b6040516101d39190612e55565b60405180910390f35b3480156101e857600080fd5b5061020360048036038101906101fe9190612e70565b610e12565b6040516102109190612f94565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190612e19565b610f90565b60405161024d919061306c565b60405180910390f35b34801561026257600080fd5b5061026b6110d1565b6040516102789190612e55565b60405180910390f35b34801561028d57600080fd5b506102966110d7565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190612e19565b61115f565b6040516102cc9190612f94565b60405180910390f35b3480156102e157600080fd5b506102fc60048036038101906102f791906130ba565b6112fe565b60405161030991906130f6565b60405180910390f35b34801561031e57600080fd5b5061032761131e565b6040516103349190613120565b60405180910390f35b34801561034957600080fd5b50610364600480360381019061035f919061313b565b611347565b005b34801561037257600080fd5b5061037b611492565b6040516103889190613120565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b39190612dd9565b6114b8565b005b3480156103c657600080fd5b506103cf6119af565b6040516103dc9190613120565b60405180910390f35b3480156103f157600080fd5b5061040c60048036038101906104079190612e19565b6119d5565b6040516104199190612f94565b60405180910390f35b34801561042e57600080fd5b5061044960048036038101906104449190612e19565b611b74565b005b34801561045757600080fd5b50610460611d5a565b60405161046d9190612e55565b60405180910390f35b34801561048257600080fd5b5061049d60048036038101906104989190612e19565b611d62565b005b3480156104ab57600080fd5b506104c660048036038101906104c19190612e19565b612150565b005b3480156104d457600080fd5b506104ef60048036038101906104ea91906131aa565b612247565b005b60055481565b6104ff61291a565b73ffffffffffffffffffffffffffffffffffffffff1661051d61131e565b73ffffffffffffffffffffffffffffffffffffffff1614610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a90613263565b60405180910390fd5b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361077a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610771906132cf565b60405180910390fd5b81816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506107ba612922565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600a8560405161092a919061332b565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f12d9f0c2e5a1e92bff5db4da82d114883e0209cee589acea31f73786e7b1690884600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301548486604051610acf949392919061337b565b60405180910390a150505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b3c939291906133c7565b6020604051808303816000875af1158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f919061342a565b506000610b8b836129b5565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610be990613486565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1590613486565b8015610c625780601f10610c3757610100808354040283529160200191610c62565b820191906000526020600020905b815481529060010190602001808311610c4557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c90613503565b60405180910390fd5b81600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d809190613552565b600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610e1a612a8f565b600a82604051610e2a919061332b565b9081526020016040518091039020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610f98612b18565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082018054610ff290613486565b80601f016020809104026020016040519081016040528092919081815260200182805461101e90613486565b801561106b5780601f106110405761010080835404028352916020019161106b565b820191906000526020600020905b81548152906001019060200180831161104e57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60075481565b6110df61291a565b73ffffffffffffffffffffffffffffffffffffffff166110fd61131e565b73ffffffffffffffffffffffffffffffffffffffff1614611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a90613263565b60405180910390fd5b61115d60006129cb565b565b611167612a8f565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60086020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61134f61291a565b73ffffffffffffffffffffffffffffffffffffffff1661136d61131e565b73ffffffffffffffffffffffffffffffffffffffff16146113c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ba90613263565b60405180910390fd5b60405180604001604052808381526020018473ffffffffffffffffffffffffffffffffffffffff16815250600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816114429190613732565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114c061291a565b73ffffffffffffffffffffffffffffffffffffffff166114de61131e565b73ffffffffffffffffffffffffffffffffffffffff1614611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b90613263565b60405180910390fd5b600061153e612922565b905081816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160600181815250506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811161179c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179390613876565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161461180f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611806906138e2565b60405180910390fd5b82600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fc3e0f84839dc888c892a013d10c8f9d6dc05a21a879d0ce468ca558013e9121c85856040516119a0929190613902565b60405180910390a15050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6119dd612a8f565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b611b7c61291a565b73ffffffffffffffffffffffffffffffffffffffff16611b9a61131e565b73ffffffffffffffffffffffffffffffffffffffff1614611bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be790613263565b60405180910390fd5b611bf8612922565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b600044905090565b611d6a61291a565b73ffffffffffffffffffffffffffffffffffffffff16611d8861131e565b73ffffffffffffffffffffffffffffffffffffffff1614611dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd590613263565b60405180910390fd5b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603611fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdc90613977565b60405180910390fd5b611fed612922565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b61215861291a565b73ffffffffffffffffffffffffffffffffffffffff1661217661131e565b73ffffffffffffffffffffffffffffffffffffffff16146121cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c390613263565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361223b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223290613a09565b60405180910390fd5b612244816129cb565b50565b61224f61291a565b73ffffffffffffffffffffffffffffffffffffffff1661226d61131e565b73ffffffffffffffffffffffffffffffffffffffff16146122c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ba90613263565b60405180910390fd5b6000600a836040516122d5919061332b565b9081526020016040518091039020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff168160e0015173ffffffffffffffffffffffffffffffffffffffff16146124a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124a090613a75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161415801561251b5750600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b61255a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255190613ae1565b60405180910390fd5b8060a001511561261557806020015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146125d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125cd90613b4d565b60405180910390fd5b6000600a846040516125e8919061332b565b908152602001604051809103902060050160006101000a81548160ff0219169083151502179055506126c2565b806000015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267e90613b4d565b60405180910390fd5b6001600a84604051612699919061332b565b908152602001604051809103902060050160006101000a81548160ff0219169083151502179055505b60006126cc611d5a565b90506000808360800151146126e55782608001516126e8565b60645b90506000600182846126fa9190613b9c565b6127049190613552565b905080600a87604051612717919061332b565b9081526020016040518091039020600401819055506001600a8760405161273e919061332b565b9081526020016040518091039020600601600082825461275e9190613552565b92505081905550600181036128d75784600a8760405161277e919061332b565b908152602001604051809103902060070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4a8abc7cbccfce0b636ee9c6fae32c8c7fbf234ed8aafa534ebab2ee4ddc6fbe8686600a89604051612800919061332b565b908152602001604051809103902060050160009054906101000a900460ff1661286a57600a89604051612833919061332b565b908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166128ad565b600a8960405161287a919061332b565b908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600288606001516128be9190613bcd565b6040516128ce9493929190613c0f565b60405180910390a15b7fdd42890214d893c0e99a85ab879fdc86f67bd82bf899e8851d5592f4d5514d1c86868360405161290a93929190613c5b565b60405180910390a1505050505050565b600033905090565b61292a612a8f565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905090565b60006009826129c49190613c99565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b612b5b81612b48565b82525050565b6000602082019050612b766000830184612b52565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612be382612b9a565b810181811067ffffffffffffffff82111715612c0257612c01612bab565b5b80604052505050565b6000612c15612b7c565b9050612c218282612bda565b919050565b600067ffffffffffffffff821115612c4157612c40612bab565b5b612c4a82612b9a565b9050602081019050919050565b82818337600083830152505050565b6000612c79612c7484612c26565b612c0b565b905082815260208101848484011115612c9557612c94612b95565b5b612ca0848285612c57565b509392505050565b600082601f830112612cbd57612cbc612b90565b5b8135612ccd848260208601612c66565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d0182612cd6565b9050919050565b612d1181612cf6565b8114612d1c57600080fd5b50565b600081359050612d2e81612d08565b92915050565b600080600060608486031215612d4d57612d4c612b86565b5b600084013567ffffffffffffffff811115612d6b57612d6a612b8b565b5b612d7786828701612ca8565b9350506020612d8886828701612d1f565b9250506040612d9986828701612d1f565b9150509250925092565b6000819050919050565b612db681612da3565b8114612dc157600080fd5b50565b600081359050612dd381612dad565b92915050565b60008060408385031215612df057612def612b86565b5b6000612dfe85828601612dc4565b9250506020612e0f85828601612d1f565b9150509250929050565b600060208284031215612e2f57612e2e612b86565b5b6000612e3d84828501612d1f565b91505092915050565b612e4f81612da3565b82525050565b6000602082019050612e6a6000830184612e46565b92915050565b600060208284031215612e8657612e85612b86565b5b600082013567ffffffffffffffff811115612ea457612ea3612b8b565b5b612eb084828501612ca8565b91505092915050565b612ec281612cf6565b82525050565b612ed181612da3565b82525050565b60008115159050919050565b612eec81612ed7565b82525050565b61010082016000820151612f096000850182612eb9565b506020820151612f1c6020850182612eb9565b506040820151612f2f6040850182612ec8565b506060820151612f426060850182612ec8565b506080820151612f556080850182612ec8565b5060a0820151612f6860a0850182612ee3565b5060c0820151612f7b60c0850182612ec8565b5060e0820151612f8e60e0850182612eb9565b50505050565b600061010082019050612faa6000830184612ef2565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612fea578082015181840152602081019050612fcf565b60008484015250505050565b600061300182612fb0565b61300b8185612fbb565b935061301b818560208601612fcc565b61302481612b9a565b840191505092915050565b6000604083016000830151848203600086015261304c8282612ff6565b91505060208301516130616020860182612eb9565b508091505092915050565b60006020820190508181036000830152613086818461302f565b905092915050565b61309781612b48565b81146130a257600080fd5b50565b6000813590506130b48161308e565b92915050565b6000602082840312156130d0576130cf612b86565b5b60006130de848285016130a5565b91505092915050565b6130f081612ed7565b82525050565b600060208201905061310b60008301846130e7565b92915050565b61311a81612cf6565b82525050565b60006020820190506131356000830184613111565b92915050565b60008060006060848603121561315457613153612b86565b5b600061316286828701612d1f565b935050602084013567ffffffffffffffff81111561318357613182612b8b565b5b61318f86828701612ca8565b92505060406131a086828701612d1f565b9150509250925092565b600080604083850312156131c1576131c0612b86565b5b600083013567ffffffffffffffff8111156131df576131de612b8b565b5b6131eb85828601612ca8565b92505060206131fc85828601612d1f565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061324d602083613206565b915061325882613217565b602082019050919050565b6000602082019050818103600083015261327c81613240565b9050919050565b7f436f756c64206e6f742066696e642070656e64696e672067616d652100000000600082015250565b60006132b9601c83613206565b91506132c482613283565b602082019050919050565b600060208201905081810360008301526132e8816132ac565b9050919050565b600081905092915050565b600061330582612fb0565b61330f81856132ef565b935061331f818560208601612fcc565b80840191505092915050565b600061333782846132fa565b915081905092915050565b600061334d82612fb0565b6133578185613206565b9350613367818560208601612fcc565b61337081612b9a565b840191505092915050565b600060808201905081810360008301526133958187613342565b90506133a46020830186612e46565b6133b16040830185613111565b6133be6060830184613111565b95945050505050565b60006060820190506133dc6000830186613111565b6133e96020830185613111565b6133f66040830184612e46565b949350505050565b61340781612ed7565b811461341257600080fd5b50565b600081519050613424816133fe565b92915050565b6000602082840312156134405761343f612b86565b5b600061344e84828501613415565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061349e57607f821691505b6020821081036134b1576134b0613457565b5b50919050565b7f496e76616c69642077616c6c65742070726f7669646564210000000000000000600082015250565b60006134ed601883613206565b91506134f8826134b7565b602082019050919050565b6000602082019050818103600083015261351c816134e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061355d82612da3565b915061356883612da3565b92508282019050808211156135805761357f613523565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026135e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826135ab565b6135f286836135ab565b95508019841693508086168417925050509392505050565b6000819050919050565b600061362f61362a61362584612da3565b61360a565b612da3565b9050919050565b6000819050919050565b61364983613614565b61365d61365582613636565b8484546135b8565b825550505050565b600090565b613672613665565b61367d818484613640565b505050565b5b818110156136a15761369660008261366a565b600181019050613683565b5050565b601f8211156136e6576136b781613586565b6136c08461359b565b810160208510156136cf578190505b6136e36136db8561359b565b830182613682565b50505b505050565b600082821c905092915050565b6000613709600019846008026136eb565b1980831691505092915050565b600061372283836136f8565b9150826002028217905092915050565b61373b82612fb0565b67ffffffffffffffff81111561375457613753612bab565b5b61375e8254613486565b6137698282856136a5565b600060209050601f83116001811461379c576000841561378a578287015190505b6137948582613716565b8655506137fc565b601f1984166137aa86613586565b60005b828110156137d2578489015182556001820191506020850194506020810190506137ad565b868310156137ef57848901516137eb601f8916826136f8565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f6e2774206861766520656e6f7567682062616c616e636520666f60008201527f7220746869732067616d65000000000000000000000000000000000000000000602082015250565b6000613860602b83613206565b915061386b82613804565b604082019050919050565b6000602082019050818103600083015261388f81613853565b9050919050565b7f596f7520616c726561647920686176652070656e64696e672067616d65210000600082015250565b60006138cc601e83613206565b91506138d782613896565b602082019050919050565b600060208201905081810360008301526138fb816138bf565b9050919050565b60006040820190506139176000830185612e46565b6139246020830184613111565b9392505050565b7f436f756c64206e6f742066696e642070656e64696e672067616d650000000000600082015250565b6000613961601b83613206565b915061396c8261392b565b602082019050919050565b6000602082019050818103600083015261399081613954565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006139f3602683613206565b91506139fe82613997565b604082019050919050565b60006020820190508181036000830152613a22816139e6565b9050919050565b7f47616d6520616c7265616479207265736f6c7665640000000000000000000000600082015250565b6000613a5f601583613206565b9150613a6a82613a29565b602082019050919050565b60006020820190508181036000830152613a8e81613a52565b9050919050565b7f496e76616c69642067616d6520636f6e66696721000000000000000000000000600082015250565b6000613acb601483613206565b9150613ad682613a95565b602082019050919050565b60006020820190508181036000830152613afa81613abe565b9050919050565b7f43616e277420726f6c6c20747769636520696e20726f77000000000000000000600082015250565b6000613b37601783613206565b9150613b4282613b01565b602082019050919050565b60006020820190508181036000830152613b6681613b2a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613ba782612da3565b9150613bb283612da3565b925082613bc257613bc1613b6d565b5b828206905092915050565b6000613bd882612da3565b9150613be383612da3565b9250828202613bf181612da3565b91508282048414831517613c0857613c07613523565b5b5092915050565b60006080820190508181036000830152613c298187613342565b9050613c386020830186613111565b613c456040830185613111565b613c526060830184612e46565b95945050505050565b60006060820190508181036000830152613c758186613342565b9050613c846020830185613111565b613c916040830184612e46565b949350505050565b6000613ca482612da3565b9150613caf83612da3565b925082613cbf57613cbe613b6d565b5b82820490509291505056fea2646970667358221220a86a69077939d7b966364ce958b2339996567b47a9b099cfb71f4df080582c2964736f6c63430008130033";

type DETHRollConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DETHRollConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DETHRoll__factory extends ContractFactory {
  constructor(...args: DETHRollConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _currency: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_currency, overrides || {});
  }
  override deploy(
    _currency: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_currency, overrides || {}) as Promise<
      DETHRoll & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DETHRoll__factory {
    return super.connect(runner) as DETHRoll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DETHRollInterface {
    return new Interface(_abi) as DETHRollInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DETHRoll {
    return new Contract(address, _abi, runner) as unknown as DETHRoll;
  }
}
