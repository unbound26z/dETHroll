/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DETH, DETHInterface } from "../../contracts/DETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_airnodeRrp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_qrngUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "airnodeRrp",
    outputs: [
      {
        internalType: "contract IAirnodeRrpV0",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositErc20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endpointIdUint256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "expectingRequestWithIdToBeFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fulfillUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getMinePendingGame",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player1",
            type: "address",
          },
          {
            internalType: "address",
            name: "player2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRandomNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "betAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "lastPlayer1",
            type: "bool",
          },
        ],
        internalType: "struct dETH.Game",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "initGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oponent",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_endpointIdUint256",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_sponsorWallet",
        type: "address",
      },
    ],
    name: "setParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sponsorWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "verifyMessage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620023633803806200236383398181016040528101906200003791906200027d565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663addf027c3060016040518363ffffffff1660e01b8152600401620000aa929190620002dd565b600060405180830381600087803b158015620000c557600080fd5b505af1158015620000da573d6000803e3d6000fd5b5050505050620000ff620000f36200014760201b60201c565b6200014f60201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200030a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002458262000218565b9050919050565b620002578162000238565b81146200026357600080fd5b50565b60008151905062000277816200024c565b92915050565b60006020828403121562000296576200029562000213565b5b6000620002a68482850162000266565b91505092915050565b620002ba8162000238565b82525050565b60008115159050919050565b620002d781620002c0565b82525050565b6000604082019050620002f46000830185620002af565b620003036020830184620002cc565b9392505050565b6080516120366200032d6000396000818161047f0152610a8901526120366000f3fe6080604052600436106100f75760003560e01c806381dd33b51161008a578063bf90fb4e11610059578063bf90fb4e146103b0578063d3cf32df146103db578063f2fde38b14610418578063fda648201461044157610198565b806381dd33b5146102e0578063851244f71461031d5780638da5cb5b1461035a578063a36ff4d81461038557610198565b80636ec3c393116100c65780636ec3c3931461024a578063715018a61461027557806371bab6661461028c57806376a68263146102b757610198565b806307b9fc571461019d5780633718d90a146101c85780636548b40d14610205578063661ddef01461022157610198565b366101985760006101073461046a565b905080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610154919061153f565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055005b600080fd5b3480156101a957600080fd5b506101b2610475565b6040516101bf919061158c565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190611642565b61047b565b6040516101fc91906116b1565b60405180910390f35b61021f600480360381019061021a9190611756565b6105b5565b005b34801561022d57600080fd5b50610248600480360381019061024391906117cf565b6106dc565b005b34801561025657600080fd5b5061025f6109f9565b60405161026c91906116b1565b60405180910390f35b34801561028157600080fd5b5061028a6109ff565b005b34801561029857600080fd5b506102a1610a87565b6040516102ae91906118a9565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d991906118c4565b610aab565b005b3480156102ec57600080fd5b5061030760048036038101906103029190611917565b610bb5565b60405161031491906119f8565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f9190611a13565b610cf3565b6040516103519190611a4f565b60405180910390f35b34801561036657600080fd5b5061036f610d13565b60405161037c9190611a79565b60405180910390f35b34801561039157600080fd5b5061039a610d3c565b6040516103a79190611a79565b60405180910390f35b3480156103bc57600080fd5b506103c5610d62565b6040516103d29190611a79565b60405180910390f35b3480156103e757600080fd5b5061040260048036038101906103fd9190611a94565b610d88565b60405161040f9190611a79565b60405180910390f35b34801561042457600080fd5b5061043f600480360381019061043a9190611917565b610e51565b005b34801561044d57600080fd5b5061046860048036038101906104639190611afb565b610f48565b005b6000600a9050919050565b60045481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290611bd3565b60405180910390fd5b6007600085815260200190815260200160002060009054906101000a900460ff1661056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290611c3f565b60405180910390fd5b60006007600086815260200190815260200160002060006101000a81548160ff021916908315150217905550600083838101906105a89190611c5f565b9050809150509392505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105f793929190611c8c565b6020604051808303816000875af1158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190611cef565b5060006106468361046a565b905080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610693919061153f565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006106ea85858585610d88565b905060006106f6611368565b905081816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868160800181815250506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d790611d68565b60405180910390fd5b81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050505050505050505050565b60065481565b610a076113d6565b73ffffffffffffffffffffffffffffffffffffffff16610a25610d13565b73ffffffffffffffffffffffffffffffffffffffff1614610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7290611dd4565b60405180910390fd5b610a8560006113de565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b610ab36113d6565b73ffffffffffffffffffffffffffffffffffffffff16610ad1610d13565b73ffffffffffffffffffffffffffffffffffffffff1614610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90611dd4565b60405180910390fd5b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160048190555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b610bbd6114a2565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250905060008187604051602001610dd8929190611e86565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610e159493929190611ebd565b6020604051602081039080840390855afa158015610e37573d6000803e3d6000fd5b505050602060405103519050809350505050949350505050565b610e596113d6565b73ffffffffffffffffffffffffffffffffffffffff16610e77610d13565b73ffffffffffffffffffffffffffffffffffffffff1614610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec490611dd4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3390611f74565b60405180910390fd5b610f45816113de565b50565b6000610f5685858585610d88565b90506000600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036110fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f590611fe0565b60405180910390fd5b600087834260405160200161111593929190611c8c565b60405160208183030381529060405280519060200120905082826020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061116d611368565b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050816009600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050505050505050505050565b6113706114a2565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160001515815250905090565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581525090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061154a82611506565b915061155583611506565b925082820190508082111561156d5761156c611510565b5b92915050565b6000819050919050565b61158681611573565b82525050565b60006020820190506115a1600083018461157d565b92915050565b600080fd5b600080fd5b6115ba81611573565b81146115c557600080fd5b50565b6000813590506115d7816115b1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611602576116016115dd565b5b8235905067ffffffffffffffff81111561161f5761161e6115e2565b5b60208301915083600182028301111561163b5761163a6115e7565b5b9250929050565b60008060006040848603121561165b5761165a6115a7565b5b6000611669868287016115c8565b935050602084013567ffffffffffffffff81111561168a576116896115ac565b5b611696868287016115ec565b92509250509250925092565b6116ab81611506565b82525050565b60006020820190506116c660008301846116a2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116f7826116cc565b9050919050565b611707816116ec565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b61173381611506565b811461173e57600080fd5b50565b6000813590506117508161172a565b92915050565b6000806040838503121561176d5761176c6115a7565b5b600061177b85828601611715565b925050602061178c85828601611741565b9150509250929050565b600060ff82169050919050565b6117ac81611796565b81146117b757600080fd5b50565b6000813590506117c9816117a3565b92915050565b600080600080600060a086880312156117eb576117ea6115a7565b5b60006117f988828901611741565b955050602061180a888289016115c8565b945050604061181b888289016117ba565b935050606061182c888289016115c8565b925050608061183d888289016115c8565b9150509295509295909350565b6000819050919050565b600061186f61186a611865846116cc565b61184a565b6116cc565b9050919050565b600061188182611854565b9050919050565b600061189382611876565b9050919050565b6118a381611888565b82525050565b60006020820190506118be600083018461189a565b92915050565b6000806000606084860312156118dd576118dc6115a7565b5b60006118eb86828701611715565b93505060206118fc868287016115c8565b925050604061190d86828701611715565b9150509250925092565b60006020828403121561192d5761192c6115a7565b5b600061193b84828501611715565b91505092915050565b61194d816116ec565b82525050565b61195c81611506565b82525050565b60008115159050919050565b61197781611962565b82525050565b60c0820160008201516119936000850182611944565b5060208201516119a66020850182611944565b5060408201516119b96040850182611953565b5060608201516119cc6060850182611953565b5060808201516119df6080850182611953565b5060a08201516119f260a085018261196e565b50505050565b600060c082019050611a0d600083018461197d565b92915050565b600060208284031215611a2957611a286115a7565b5b6000611a37848285016115c8565b91505092915050565b611a4981611962565b82525050565b6000602082019050611a646000830184611a40565b92915050565b611a73816116ec565b82525050565b6000602082019050611a8e6000830184611a6a565b92915050565b60008060008060808587031215611aae57611aad6115a7565b5b6000611abc878288016115c8565b9450506020611acd878288016117ba565b9350506040611ade878288016115c8565b9250506060611aef878288016115c8565b91505092959194509250565b600080600080600060a08688031215611b1757611b166115a7565b5b6000611b2588828901611715565b9550506020611b36888289016115c8565b9450506040611b47888289016117ba565b9350506060611b58888289016115c8565b9250506080611b69888289016115c8565b9150509295509295909350565b600082825260208201905092915050565b7f43616c6c6572206e6f74204169726e6f64652052525000000000000000000000600082015250565b6000611bbd601683611b76565b9150611bc882611b87565b602082019050919050565b60006020820190508181036000830152611bec81611bb0565b9050919050565b7f52657175657374204944206e6f74206b6e6f776e000000000000000000000000600082015250565b6000611c29601483611b76565b9150611c3482611bf3565b602082019050919050565b60006020820190508181036000830152611c5881611c1c565b9050919050565b600060208284031215611c7557611c746115a7565b5b6000611c8384828501611741565b91505092915050565b6000606082019050611ca16000830186611a6a565b611cae6020830185611a6a565b611cbb60408301846116a2565b949350505050565b611ccc81611962565b8114611cd757600080fd5b50565b600081519050611ce981611cc3565b92915050565b600060208284031215611d0557611d046115a7565b5b6000611d1384828501611cda565b91505092915050565b7f596f7520616c726561647920686176652070656e64696e672067616d65210000600082015250565b6000611d52601e83611b76565b9150611d5d82611d1c565b602082019050919050565b60006020820190508181036000830152611d8181611d45565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611dbe602083611b76565b9150611dc982611d88565b602082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611e28578082015181840152602081019050611e0d565b60008484015250505050565b6000611e3f82611df4565b611e498185611dff565b9350611e59818560208601611e0a565b80840191505092915050565b6000819050919050565b611e80611e7b82611573565b611e65565b82525050565b6000611e928285611e34565b9150611e9e8284611e6f565b6020820191508190509392505050565b611eb781611796565b82525050565b6000608082019050611ed2600083018761157d565b611edf6020830186611eae565b611eec604083018561157d565b611ef9606083018461157d565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f5e602683611b76565b9150611f6982611f02565b604082019050919050565b60006020820190508181036000830152611f8d81611f51565b9050919050565b7f436f756c64206e6f742066696e642070656e64696e672067616d652100000000600082015250565b6000611fca601c83611b76565b9150611fd582611f94565b602082019050919050565b60006020820190508181036000830152611ff981611fbd565b905091905056fea26469706673582212209d046c66dbe3a52389600e92de8b16ac94324a8aaf510ba2d9e2063aadb15b2264736f6c63430008130033";

type DETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DETH__factory extends ContractFactory {
  constructor(...args: DETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _airnodeRrp: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_airnodeRrp, overrides || {});
  }
  override deploy(
    _airnodeRrp: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_airnodeRrp, overrides || {}) as Promise<
      DETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DETH__factory {
    return super.connect(runner) as DETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DETHInterface {
    return new Interface(_abi) as DETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DETH {
    return new Contract(address, _abi, runner) as unknown as DETH;
  }
}
