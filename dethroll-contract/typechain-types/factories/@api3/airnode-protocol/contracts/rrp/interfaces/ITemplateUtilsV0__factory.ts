/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITemplateUtilsV0,
  ITemplateUtilsV0Interface,
} from "../../../../../../@api3/airnode-protocol/contracts/rrp/interfaces/ITemplateUtilsV0";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "templateId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "endpointId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "CreatedTemplate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpointId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "createTemplate",
    outputs: [
      {
        internalType: "bytes32",
        name: "templateId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "templateIds",
        type: "bytes32[]",
      },
    ],
    name: "getTemplates",
    outputs: [
      {
        internalType: "address[]",
        name: "airnodes",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "endpointIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "parameters",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "templateId",
        type: "bytes32",
      },
    ],
    name: "templates",
    outputs: [
      {
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpointId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITemplateUtilsV0__factory {
  static readonly abi = _abi;
  static createInterface(): ITemplateUtilsV0Interface {
    return new Interface(_abi) as ITemplateUtilsV0Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITemplateUtilsV0 {
    return new Contract(address, _abi, runner) as unknown as ITemplateUtilsV0;
  }
}
