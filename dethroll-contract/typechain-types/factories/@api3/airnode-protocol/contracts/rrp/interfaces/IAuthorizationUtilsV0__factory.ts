/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAuthorizationUtilsV0,
  IAuthorizationUtilsV0Interface,
} from "../../../../../../@api3/airnode-protocol/contracts/rrp/interfaces/IAuthorizationUtilsV0";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "authorizers",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "endpointId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "checkAuthorizationStatus",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "authorizers",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "requestIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "endpointIds",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "sponsors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "requesters",
        type: "address[]",
      },
    ],
    name: "checkAuthorizationStatuses",
    outputs: [
      {
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAuthorizationUtilsV0__factory {
  static readonly abi = _abi;
  static createInterface(): IAuthorizationUtilsV0Interface {
    return new Interface(_abi) as IAuthorizationUtilsV0Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAuthorizationUtilsV0 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IAuthorizationUtilsV0;
  }
}
